{"version":3,"sources":["Components/Filter/Filter.module.css","Components/Form/Form.module.css","Components/Contacts/Contacts.js","Components/Filter/Filter.js","Components/Form/Form.js","App.js","index.js","App.module.css","Components/Contacts/Contacts.module.css"],"names":["module","exports","Contacts","contacts","onClick","className","s","list","map","contact","id","name","number","item","type","button","Filter","filter","onChange","filterId","shortid","generate","htmlFor","label","pattern","title","required","value","input","Form","state","nameId","numberId","handleSubmit","e","preventDefault","props","onSubmit","resetFormInput","hadleAddValue","currentTarget","setState","this","form","Component","App","useState","setContacts","setFilter","useEffect","currentContacts","localStorage","getItem","parsedCurrentContacts","JSON","parse","prevState","setItem","stringify","filteredContact","normalizeFilter","toLowerCase","trim","includes","filteredContacts","data","find","alert","newContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cb00df0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3P8WK\",\"input\":\"Filter_input__24x70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1SX-X\",\"label\":\"Form_label__2fk0E\",\"input\":\"Form_input__3KJhd\",\"button\":\"Form_button__eValR\"};","import s from \"../Contacts/Contacts.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function Contacts({ contacts, onClick }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => {\n        const { id, name, number } = contact;\n        return (\n          <li key={id} className={s.item}>\n            {name}: {number}\n            <button\n              type=\"button\"\n              onClick={() => onClick(id)}\n              className={s.button}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport s from \"../Filter/Filter.module.css\";\n\nexport default function Filter({ filter, onChange }) {\n  const filterId = shortid.generate();\n  return (\n    <label htmlFor={filterId} className={s.label}>\n      Find contacts by name\n      <input\n        id={filterId}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={filter}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport s from \"../Form/Form.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameId = shortid.generate();\n  numberId = shortid.generate();\n\n  resetFormInput() {\n    this.setState({ name: \"\", number: \"\" });\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetFormInput();\n  };\n  hadleAddValue = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label htmlFor={this.nameId} className={s.label}>\n          Name\n        </label>\n        <input\n          id={this.nameId}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={this.state.name}\n          onChange={this.hadleAddValue}\n          className={s.input}\n        />\n        <label htmlFor={this.numberId} className={s.label}>\n          Number\n        </label>\n        <input\n          id={this.numberId}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={this.state.number}\n          onChange={this.hadleAddValue}\n          className={s.input}\n        />\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import { useEffect, useState } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./App.module.css\";\nimport Contacts from \"./Components/Contacts/Contacts\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Form from \"./Components/Form/Form\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const currentContacts = localStorage.getItem(\"contacts\");\n    const parsedCurrentContacts = JSON.parse(currentContacts);\n\n    if (parsedCurrentContacts) {\n      setContacts(parsedCurrentContacts);\n    }\n  }, []);\n\n  useEffect(\n    (prevState) => {\n      if (prevState !== contacts) {\n        localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n      }\n    },\n    [contacts]\n  );\n\n  const addToDataContacts = (data) => {\n    if (contacts.find((contact) => contact.name === data.name)) {\n      alert(`${data.name} is already created!`);\n      return;\n    }\n\n    const newContact = {\n      id: shortid.generate(),\n      ...data,\n    };\n    setContacts((prevState) => [...prevState, newContact]);\n  };\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  const onFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const filteredContacts = () => {\n    const normalizeFilter = filter.toLowerCase().trim();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const filteredContact = filteredContacts();\n  return (\n    <div className={s.App}>\n      <h1 className={s.title}>Phonebook</h1>\n      <Form onSubmit={addToDataContacts} />\n      <h2 className={s.title}>Contacts:</h2>\n      <Filter filter={filter} onChange={onFilter} />\n      <Contacts contacts={filteredContact} onClick={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Gvwzv\",\"title\":\"App_title__14UdU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2XS-u\",\"item\":\"Contacts_item__12D7A\",\"button\":\"Contacts_button__2ye9U\"};"],"sourceRoot":""}